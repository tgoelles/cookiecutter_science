// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/python-3-miniconda
{
	"name": "{{ cookiecutter.repo_name }}",
	"build": {
		"context": "..",
		"dockerfile": "Dockerfile"
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-toolsai.jupyter",
				"ms-python.python",
				"charliermarsh.ruff",
				"ms-python.mypy-type-checker",
				"njpwerner.autodocstring",
				"oderwat.indent-rainbow",
				"ms-toolsai.datawrangler",
				"mechatroner.rainbow-csv",
				"tamasfe.even-better-toml"
			],
			"settings": {
				"editor.formatOnSave": true,
				"[latex]": {
					"editor.wordWrap": "on",
					"editor.formatOnSave": false,
				},
				"latex-workshop.latex.tools": [
					{
						"name": "pdflatex",
						"command": "pdflatex",
						"args": [
							"-synctex=1",
							"-interaction=nonstopmode",
							"-file-line-error",
							"-output-directory=%OUTDIR%",
							"%DOC%"
						],
						"env": {}
					},
					{
						"name": "biber",
						"command": "biber",
						"args": [
							"%DOCFILE%"
						],
						"env": {}
					}
				],
				"latex-workshop.latex.recipes": [
					{
						"name": "pdflatex -> biber -> pdflatex * 2",
						"tools": [
							"pdflatex",
							"biber",
							"pdflatex",
							"pdflatex"
						]
					},
					{
						"name": "latexmk",
						"tools": [
							"latexmk"
						]
					},
					{
						"name": "latexmk (lualatex)",
						"tools": [
							"lualatexmk"
						]
					},
					{
						"name": "latexmk (xelatex)",
						"tools": [
							"xelatexmk"
						]
					},
				],
				"autoDocstring.docstringFormat": "google",
				"cSpell.maxNumberOfProblems": 500,
				"python.dataScience.alwaysTrustNotebooks": true,
				"jupyter.alwaysTrustNotebooks": true,
				"jupyter.jupyterCommandLineArguments": [
					"--allow-root"
				],
				"python.venvPath": "{localWorkspaceFolder}/code/.venv",
				"python.analysis.typeCheckingMode": "basic",
				"python.analysis.inlayHints.functionReturnTypes": true,
				"notebook.formatOnSave.enabled": true
			},
		},
	},
	"workspaceFolder": "/workspace",
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
	"postCreateCommand": "cd /workspace/code && uv sync",
	// "mounts": [
	// 	"source=XXXXXX,target=/workspace/data/01_raw/mounts,type=bind,consistency=cached",
	// ]
}